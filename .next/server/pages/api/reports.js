"use strict";(()=>{var e={};e.id=400,e.ids=[400],e.modules={3480:(e,t,r)=>{e.exports=r(5600)},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return r}});var r=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})},9911:(e,t,r)=>{let n;r.r(t),r.d(t,{config:()=>P,default:()=>f,routeModule:()=>A});var o={};r.r(o),r.d(o,{default:()=>p});var a=r(3480),i=r(8667),s=r(6435);let u=require("mongodb");if(!process.env.MONGODB_URI)throw Error('Invalid/Missing environment variable: "MONGODB_URI"');let c=process.env.MONGODB_URI;async function d(){try{let e=(await n).db("reports_db");return await e.collection("reports").find({}).sort({metacritic:-1}).toArray()}catch(e){console.error(e)}}async function l(e){try{let t=(await n).db("reports_db");return await t.collection("reports").insertOne({place:e.place,square:e.square,description:e.description,amountAndType:e.amountAndType})}catch(e){console.error(e)}}n=new u.MongoClient(c,{});let p=async function(e,t){switch(e.method){case"GET":let r=await d();t.status(200).json(r);break;case"POST":let n=e.body,o=await l(n);t.status(201).json(o);break;default:t.status(405).end()}},f=(0,s.M)(o,"default"),P=(0,s.M)(o,"config"),A=new a.PagesAPIRouteModule({definition:{kind:i.A.PAGES_API,page:"/api/reports",pathname:"/api/reports",bundlePath:"",filename:""},userland:o})}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=9911);module.exports=r})();